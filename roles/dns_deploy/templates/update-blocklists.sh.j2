#!/bin/bash
# Unbound blocklist update script
# Generated by Ansible - do not edit manually

set -euo pipefail

BLOCKLIST_DIR="{{ dns_unbound_blocklist_dir }}"
BLOCKLIST_FILE="${BLOCKLIST_DIR}/blocklist.conf"
BLOCKLIST_TEMP="${BLOCKLIST_DIR}/blocklist.conf.tmp"
BLOCKLIST_BACKUP="${BLOCKLIST_DIR}/blocklist.conf.backup"

# Ensure directory exists
mkdir -p "${BLOCKLIST_DIR}"

# Initialize temporary file
> "${BLOCKLIST_TEMP}"

# Download and process blocklists
{% for blocklist in dns_blocklists %}
{% if blocklist is string %}
echo "Downloading {{ blocklist | basename }}..."
curl -sSL "{{ blocklist }}" | \
{% else %}
echo "Downloading {{ blocklist.url | default(blocklist) | basename }}..."
curl -sSL "{{ blocklist.url | default(blocklist) }}" | \
{% endif %}
  grep -E '^(0\.0\.0\.0|127\.0\.0\.1)' | \
  awk '{print $2}' | \
  grep -v '^localhost$' | \
  grep -v '^0\.0\.0\.0$' | \
  grep -v '^127\.0\.0\.1$' | \
  sort -u | \
  while read domain; do
    echo "local-zone: \"${domain}\" always_nxdomain" >> "${BLOCKLIST_TEMP}"
  done
{% endfor %}

# Add custom blocked domains
{% for domain in dns_custom_blocked_domains | default([]) %}
echo "local-zone: \"{{ domain }}\" always_nxdomain" >> "${BLOCKLIST_TEMP}"
{% endfor %}

# Sort and deduplicate
sort -u "${BLOCKLIST_TEMP}" -o "${BLOCKLIST_TEMP}"

# Validate the file isn't empty
if [ ! -s "${BLOCKLIST_TEMP}" ]; then
    echo "ERROR: Blocklist is empty, aborting update"
    exit 1
fi

# Backup current blocklist if it exists
if [ -f "${BLOCKLIST_FILE}" ]; then
    cp "${BLOCKLIST_FILE}" "${BLOCKLIST_BACKUP}"
fi

# Move new blocklist into place
mv "${BLOCKLIST_TEMP}" "${BLOCKLIST_FILE}"

# Set proper permissions
chown unbound:unbound "${BLOCKLIST_FILE}"
chmod 644 "${BLOCKLIST_FILE}"

echo "Blocklist updated successfully with $(wc -l < ${BLOCKLIST_FILE}) entries"

# Reload Unbound
systemctl reload unbound || systemctl restart unbound

echo "Unbound reloaded with new blocklist"