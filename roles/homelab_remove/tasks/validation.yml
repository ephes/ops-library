---
# Validation and safety checks

- name: Fail if confirmation flag is not set
  ansible.builtin.fail:
    msg: |
      ❌ REMOVAL BLOCKED: homelab_remove_confirm must be set to true

      This role will remove the homelab service and potentially delete data.
      Set homelab_remove_confirm: true to proceed.
  when: not homelab_remove_confirm

- name: Check if systemd service exists
  ansible.builtin.stat:
    path: "{{ homelab_systemd_unit_path }}"
  register: homelab_service_file

- name: Check if user exists
  ansible.builtin.getent:
    database: passwd
    key: "{{ homelab_user }}"
  failed_when: false
  register: homelab_user_check

- name: Check if home directory exists
  ansible.builtin.stat:
    path: "{{ homelab_home }}"
  register: homelab_home_check

- name: Check if database exists
  ansible.builtin.stat:
    path: "{{ homelab_site_path }}/db.sqlite3"
  register: homelab_db_check
  when: homelab_home_check.stat.exists

- name: Check if media directory exists
  ansible.builtin.stat:
    path: "{{ homelab_site_path }}/media"
  register: homelab_media_check
  when: homelab_home_check.stat.exists

- name: Display removal plan
  ansible.builtin.debug:
    msg: |

      ═══════════════════════════════════════════════════════════════
      🗑️  HOMELAB REMOVAL PLAN
      ═══════════════════════════════════════════════════════════════

      WILL BE REMOVED:
      {% if homelab_service_file.stat.exists %}
      ✓ Systemd service: {{ homelab_systemd_unit_path }}
      {% else %}
      ✗ Systemd service: Not found (already removed)
      {% endif %}
      {% if homelab_remove_traefik_config %}
      ✓ Traefik config: {{ homelab_traefik_config_path }}
      {% else %}
      ✗ Traefik config: Will be preserved
      {% endif %}
      {% if homelab_remove_database and homelab_db_check is defined and homelab_db_check.stat.exists %}
      ✓ Database: {{ homelab_site_path }}/db.sqlite3 ⚠️  IRREVERSIBLE!
      {% elif homelab_db_check is defined and homelab_db_check.stat.exists %}
      ✗ Database: Will be preserved
      {% endif %}
      {% if homelab_remove_media and homelab_media_check is defined and homelab_media_check.stat.exists %}
      ✓ Media files: {{ homelab_site_path }}/media/ ⚠️  IRREVERSIBLE!
      {% elif homelab_media_check is defined and homelab_media_check.stat.exists %}
      ✗ Media files: Will be preserved
      {% endif %}
      {% if homelab_remove_home and homelab_home_check.stat.exists %}
      ✓ Home directory: {{ homelab_home }}
      {% elif homelab_home_check.stat.exists %}
      ✗ Home directory: Will be preserved
      {% endif %}
      {% if homelab_remove_user and homelab_user_check.ansible_facts.getent_passwd is defined %}
      ✓ User account: {{ homelab_user }}
      {% elif homelab_user_check.ansible_facts.getent_passwd is defined %}
      ✗ User account: Will be preserved
      {% endif %}

      ═══════════════════════════════════════════════════════════════

- name: Warn about irreversible data deletion
  ansible.builtin.debug:
    msg: |

      ⚠️  WARNING: DATABASE AND MEDIA WILL BE PERMANENTLY DELETED ⚠️

      This operation is IRREVERSIBLE. Consider backing up data first.

      To preserve data, set:
        homelab_remove_database: false
        homelab_remove_media: false
  when: >
    (homelab_remove_database and homelab_db_check is defined and homelab_db_check.stat.exists) or
    (homelab_remove_media and homelab_media_check is defined and homelab_media_check.stat.exists)

- name: Pause for confirmation (if data will be deleted)
  ansible.builtin.pause:
    prompt: |

      Press ENTER to continue with removal, or Ctrl+C to abort.
  when: >
    (homelab_remove_database and homelab_db_check is defined and homelab_db_check.stat.exists) or
    (homelab_remove_media and homelab_media_check is defined and homelab_media_check.stat.exists)
